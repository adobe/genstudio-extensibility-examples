name: AIO App Template

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      environment:
        required: true
        type: string
    # This should come from environment
    secrets:
      # I/O Management
      CLIENTID:
        required: true
      CLIENTSECRET:
        required: true
      TECHNICALACCOUNTID:
        required: true
      TECHNICALACCOUNTEMAIL:
        required: true
      IMSORGID:
        required: true
      SCOPES:
        required: true
      # AIO Runtime
      AIO_RUNTIME_NAMESPACE:
        required: true
      AIO_RUNTIME_AUTH:
        required: true
      AIO_PROJECT_ID:
        required: true
      AIO_PROJECT_NAME:
        required: true
      AIO_PROJECT_ORG_ID:
        required: true
      AIO_PROJECT_WORKSPACE_ID:
        required: true
      AIO_PROJECT_WORKSPACE_NAME:
        required: true
      AIO_PROJECT_WORKSPACE_DETAILS_SERVICES:
        required: true
      # External DAM only
      GS_S3_BUCKET_NAME:
        required: false
      GS_AWS_REGION:
        required: false
      GS_AWS_ACCESS_KEY_ID:
        required: false
      GS_AWS_SECRET_ACCESS_KEY:
        required: false
      # Genstudio Translation Extension only
      AZURE_OPENAI_API_KEY:
        required: false
      AZURE_OPENAI_ENDPOINT:
        required: false
      AZURE_OPENAI_API_VERSION:
        required: false
      AZURE_OPENAI_DEPLOYMENT_NAME:
        required: false
jobs:
  deploy:
    name: Deploy
    strategy:
      matrix:
        environment: ${{ fromJson(inputs.environment) }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.app }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: ${{ inputs.app }}/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          version: 10.x.x
      - name: Auth
        uses: adobe/aio-apps-action@3.4.0
        env:
          AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
        with:
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCOUNTID }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCOUNTEMAIL }}
          IMSORGID: ${{ secrets.IMSORGID }}
          SCOPES: ${{ secrets.SCOPES }}
      - name: Build Run
        env:
          AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
          AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE }}
        run: aio app build --force-build

      - name: Deploy
        env:
          AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
          AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE }}
          AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH }}
          AIO_PROJECT_ID: ${{ secrets.AIO_PROJECT_ID }}
          AIO_PROJECT_NAME: ${{ secrets.AIO_PROJECT_NAME }}
          AIO_PROJECT_ORG_ID: ${{ secrets.AIO_PROJECT_ORG_ID }}
          AIO_PROJECT_WORKSPACE_ID: ${{ secrets.AIO_PROJECT_WORKSPACE_ID }}
          AIO_PROJECT_WORKSPACE_NAME: ${{ secrets.AIO_PROJECT_WORKSPACE_NAME }}
          AIO_PROJECT_WORKSPACE_DETAILS_SERVICES: ${{ secrets.AIO_PROJECT_WORKSPACE_DETAILS_SERVICES }}
          # External DAM only
          GS_S3_BUCKET_NAME: ${{ secrets.GS_S3_BUCKET_NAME }}
          GS_AWS_REGION: ${{ secrets.GS_AWS_REGION }}
          GS_AWS_ACCESS_KEY_ID: ${{ secrets.GS_AWS_ACCESS_KEY_ID }}
          GS_AWS_SECRET_ACCESS_KEY: ${{ secrets.GS_AWS_SECRET_ACCESS_KEY }}
        id: deploy
        run: |
          output=$(aio app deploy --no-build --force-deploy)
          echo "deploy_output<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
        with:
          script: |
            const deployOutput = `${{ steps.deploy.outputs.deploy_output }}`;

            // Determine if deployment was successful
            const isSuccessful = deployOutput.includes('Successful deployment');

            // Extract the runtime URL using regex
            const urlMatch = deployOutput.match(/https:\/\/[^\/]+\.(?:runtime\.adobe\.io|adobeio-static\.net)/);
            const runtimeUrl = urlMatch ? urlMatch[0] : 'URL not found';
            // Create the comment with status and URL
            const status = isSuccessful ? '✅' : '❌';
            const testUrl = `https://experience${process.env.AIO_CLI_ENV === 'stage' ? '-stage' : ''}.adobe.com/?devMode=true&ext=${runtimeUrl}`;

            const output = `### Deployment
            **Status:** ${status}
            **App:** ${{ inputs.app }}
            **Environment:** ${{ matrix.environment }}
            **Runtime URL:** ${runtimeUrl}
            **Test URL:** ${testUrl}
            **Action:** [View Action Run](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
