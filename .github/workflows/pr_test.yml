name: AIO App CI

on:
  pull_request:
    paths:
      - "genstudio-mlr-claims-app/**"

jobs:
  test:
    name: Test PR
    strategy:
      matrix:
        node-version: ["20"]
        os: [macOS-latest] # [macOS-latest, ubuntu-latest, windows-latest]
        app: [genstudio-mlr-claims-app]
        environment: [TEST] # [development, staging, production]
    runs-on: ${{ matrix.os }}
    environment: ${{ matrix.environment }}
    defaults:
      run:
        working-directory: ${{ matrix.app }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ${{ matrix.app }}/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          version: 10.x.x
      - name: Auth
        uses: adobe/aio-apps-action@3.4.0
        env:
          AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
        with:
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCOUNTID }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCOUNTEMAIL }}
          IMSORGID: ${{ secrets.IMSORGID }}
          SCOPES: ${{ secrets.SCOPES }}
      - name: Build Run
        env:
          AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
          AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE }}
        run: |
          if [ "$AIO_CLI_ENV" = "stage" ]; then
            aio app build --force-build
          else
            aio app build --force-build
          fi
      # - name: Deploy
      #   env:
      #     AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
      #     AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE }}
      #     AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH }}
      #     AIO_PROJECT_ID: ${{ secrets.AIO_PROJECT_ID }}
      #     AIO_PROJECT_NAME: ${{ secrets.AIO_PROJECT_NAME }}
      #     AIO_PROJECT_ORG_ID: ${{ secrets.AIO_PROJECT_ORG_ID }}
      #     AIO_PROJECT_WORKSPACE_ID: ${{ secrets.AIO_PROJECT_WORKSPACE_ID }}
      #     AIO_PROJECT_WORKSPACE_NAME: ${{ secrets.AIO_PROJECT_WORKSPACE_NAME }}
      #     AIO_PROJECT_WORKSPACE_DETAILS_SERVICES: ${{ secrets.AIO_PROJECT_WORKSPACE_DETAILS_SERVICES }}
      #   id: deploy
      #   run: |
      #     output=$(aio app deploy --no-build --no-publish)
      #     echo "deploy_output<<EOF" >> $GITHUB_OUTPUT
      #     echo "$output" >> $GITHUB_OUTPUT
      #     echo "EOF" >> $GITHUB_OUTPUT
      # - name: Run URL
      #   env:
      #     AIO_CLI_ENV: ${{ vars.AIO_CLI_ENV }}
      #     AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE }}
      #     AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH }}
      #     AIO_PROJECT_ID: ${{ secrets.AIO_PROJECT_ID }}
      #     AIO_PROJECT_NAME: ${{ secrets.AIO_PROJECT_NAME }}
      #     AIO_PROJECT_ORG_ID: ${{ secrets.AIO_PROJECT_ORG_ID }}
      #     AIO_PROJECT_WORKSPACE_ID: ${{ secrets.AIO_PROJECT_WORKSPACE_ID }}
      #     AIO_PROJECT_WORKSPACE_NAME: ${{ secrets.AIO_PROJECT_WORKSPACE_NAME }}
      #     AIO_PROJECT_WORKSPACE_DETAILS_SERVICES: ${{ secrets.AIO_PROJECT_WORKSPACE_DETAILS_SERVICES }}
      #   run: |
      #     aio app get-url
      # - name: Comment PR
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const output = `#### Deployment Results ðŸš€
      #       \`\`\`
      #       ${{ steps.deploy.outputs.deploy_output }}
      #       \`\`\`
      #       `;
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
